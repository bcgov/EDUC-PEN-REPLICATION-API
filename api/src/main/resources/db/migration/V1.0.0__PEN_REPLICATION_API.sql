CREATE TABLE PEN_REPLICATION_EVENT
(
    PEN_REPLICATION_EVENT_ID RAW(16)                             NOT NULL,
    EVENT_ID                 RAW(16)                             NOT NULL,
    EVENT_PAYLOAD            BLOB                                NOT NULL,
    EVENT_STATUS             VARCHAR2(50)                        NOT NULL,
    EVENT_TYPE               VARCHAR2(100)                       NOT NULL,
    EVENT_OUTCOME            VARCHAR2(100)                       NOT NULL,
    CREATE_USER              VARCHAR(32)                         NOT NULL,
    CREATE_DATE              TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    UPDATE_USER              VARCHAR(32)                         NOT NULL,
    UPDATE_DATE              TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    CONSTRAINT PEN_REPLICATION_EVENT_PK PRIMARY KEY (PEN_REPLICATION_EVENT_ID)
) TABLESPACE API_PEN_REP_BLOB_DATA;

CREATE INDEX PEN_REPLICATION_EVENT_EVENT_STATUS_IDX ON PEN_REPLICATION_EVENT (EVENT_STATUS);
CREATE INDEX PEN_REPLICATION_EVENT_EVENT_TYPE_IDX ON PEN_REPLICATION_EVENT (EVENT_TYPE);
ALTER TABLE PEN_REPLICATION_EVENT
    ADD CONSTRAINT PEN_REPLICATION_EVENT_EVENT_ID_UK UNIQUE (EVENT_ID);

COMMENT ON TABLE PEN_REPLICATION_EVENT IS 'This table is used to store all the received choreographed events from different api via pub/sub model and process them.';

CREATE TABLE PEN_REPLICATION_SHEDLOCK
(
    NAME       VARCHAR(64),
    LOCK_UNTIL TIMESTAMP(3) NULL,
    LOCKED_AT  TIMESTAMP(3) NULL,
    LOCKED_BY  VARCHAR(255),
    CONSTRAINT PEN_REPLICATION_SHEDLOCK_PK PRIMARY KEY (NAME)
);
COMMENT ON TABLE PEN_REPLICATION_SHEDLOCK IS 'This table is used to achieve distributed lock between pods, for schedulers.';
